#!/bin/bash

function usage() {
  echo "usage: $(basename $0) [-c|--config CONFIG] | [-w|--workdir WORKDIR] | [-f|--commandfile CMDFILE] {start|stop|status|restart}" 1>&2
}

# Set default values
CONFIG=
CMDFILE=
#WORKDIR=

# Parse arguments
eval set -- "$(getopt -n "$0" -o "hvc:w:f:" -l "help,verbose,config:,workdir:,commandfile:" "--" "$@")"
if [ "$?" -ne 0 ]; then
  usage
  exit 1
fi

while true; do
  case "$1" in
    -h|--help) usage; exit 1; shift;;
    -v|--verbose) verbose=1; shift;;
    -c|--config) shift; CONFIG="${1}"; shift;;
    -w|--workdir) shift; WORKDIR="${1}"; shift;;
    -f|--commandfile) shift; CMDFILE="${1}"; shift;;
    --) shift; break;;
  esac
done

# Check which command to execute
if [ "$#" -ne 1 ]; then
  usage
  exit 2
fi

if [ -z "$CONFIG" ]; then
  echo "Missing option -c|--config"
  usage
  exit 1
fi

source $CONFIG

PIDFILE=$RUN_DIR/strategyagent.pid
WORKDIR=${WORKDIR:-`pwd`}
#[ -z "$WORKDIR" ] && WORKDIR=`pwd`

function isrunning {
  if [ -f $PIDFILE ]; then
    local pid=$(cat $PIDFILE 2> /dev/null)
    uid=$(id -u)
    if `ps --pid $pid 2>&1 -u $uid --no-headers | grep $pid > /dev/null 2>&1`; then
      return 0
    fi
  fi
  return 1
}

# Kill the process given by $1 and its children
function sa-killtree {
  local _pid=$1
  for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
    sa-killtree ${_child}
  done

  local should_be_gone_pid=$(ps -o pid -p ${_pid} --no-headers)
  if [ -z "$should_be_gone_pid" ]; then
    return
  else
    kill ${_pid}
  fi

  local count=0
  while [ ${count} -lt 15 ]; do
    local should_be_gone_pid=$(ps -o pid -p ${_pid} --no-headers)
    if [ -z "$should_be_gone_pid" ]; then
      return
    else
      sleep 2
      let count=${count}+1
    fi
  done

  local should_be_gone_pid=$(ps -o pid -p ${_pid} --no-headers)
  if [ ! -z $should_be_gone_pid ]; then
    kill -9 ${_pid}
  fi
}

function start {
  if [ -z "$CMDFILE" ]; then
    echo "Missing -f|-commandfile"
    return 3
  fi

  echo "Starting StrategyAgent"

  if ! isrunning; then
    /usr/bin/strategyagent -c $CONFIG -w $WORKDIR $CMDFILE >/dev/null 2>&1 &
    local pid=$!
    echo $pid > $PIDFILE
    echo "Started StrategyAgent"
  else
    echo "StrategyAgent already running" 1>&2
  fi
}

function stop {
  echo "Stopping StrategyAgent"

  if isrunning; then
    if [ -f "$PIDFILE" ]; then
      pid=$(cat $PIDFILE);
      # special sa-killtree
      sa-killtree $pid
      echo "Stopped StrategyAgent"  
    else
      echo "Failed to locate StrategyAgent PID File" 1>&2
    fi
  else
    echo "StrategyAgent was already stopped"
  fi
}

function restart {
  stop
  start
}

function status() {
  if isrunning; then
    echo "StrategyAgent is running"
  else
    echo "StrategyAgent is not running"
  fi
}

case "$1" in
  start)     start ;;
  stop)      stop ;;
  restart)   restart ;;
  status)    status ;;
  *)         usage
esac




